name: Sausage Store Deploy

on:
  push:
    branches:
      - main

env:
  NEXUS_HELM_REPO: ${{ secrets.NEXUS_HELM_REPO }}
  NEXUS_REPO_NAME: ${{ secrets.NEXUS_REPO_NAME }}
  NEXUS_HELM_REPO_USER: ${{ secrets.NEXUS_HELM_REPO_USER }}
  NEXUS_HELM_REPO_PASSWORD: ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
  SAUSAGE_STORE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}
  KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  VAULT_HOST: ${{ secrets.VAULT_HOST }}
  VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  # Сборка и пуш образов в докерхаб:
  build_and_push_to_docker_hub:
      name: Push Docker image to DockerHub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          # Получение исходного кода из репозитория:
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          # Установка сборщика контейнеров Docker:
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker 
          # Авторизация на Docker Hub:
          uses: docker/login-action@v2
          # При помощи with передаём в action параметры username и password:
          with:
            username: ${{ env.DOCKER_USER }}
            password: ${{ env.DOCKER_PASSWORD }}
            # Хорошо ли держать логин и пароль прямо в коде workflow?
            # Нет, это нехорошо. Хранить пароль надо в Secrets.
        - name: Push Backend to DockerHub
          # Одновременный билд и пуш образа в Docker Hub:
          uses: docker/build-push-action@v4
          with:
            # Параметр context: ./backend/ указывает, что нужный Dockerfile 
            # находится в ./backend/
            context: ./backend/
            # Параметр push: true указывает, что образ нужно не только собрать,
            # но и отправить на Docker Hub:
            push: true
            # В параметре tags задаётся название и тег для образа.
            # Для каждого пересобранного образа 
            # устанавливаем тег latest, чтобы потом
            # на сервере и в docker-compose.yml не указывать версию образа:
            tags: ${{ env.DOCKER_USER }}/sausage-backend:${{ github.sha }}
            build-args: |
              VERSION=${{ github.sha }}
        - name: Push Frontend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: ${{ env.DOCKER_USER }}/sausage-frontend:${{ github.sha }}
        - name: Push Backend-report to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./backend-report/
            push: true
            tags: ${{ env.DOCKER_USER }}/sausage-backend-report:${{ github.sha }}
  # Упаковываем helm-чарт и пушим его в Nexus
  add_helm_chart_to_nexus:
      name: Add Helm Chart To Nexus
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub

      steps:
        - name: Get code
          uses: actions/checkout@v3

        - name: Set up helm
          uses: azure/setup-helm@v4.3.0

        - name: Add nexus, do push
          run: |
            helm plugin install https://github.com/chartmuseum/helm-push
            helm repo add chartmuseum ${{ env.NEXUS_HELM_REPO }} --username ${{ env.NEXUS_HELM_REPO_USER }} --password ${{ env.NEXUS_HELM_REPO_PASSWORD }}
            cd sausage-store-chart
            helm cm-push . chartmuseum --context-path="/repository/${{ env.NEXUS_REPO_NAME }}"

  # Деплоим приложения в кластер Kubernetes с помощью helm-чарт
  deploy_helm_chart_to_kubernetes:
      name: Deploy Helm Chart To Kubernetes
      runs-on: ubuntu-latest
      needs: add_helm_chart_to_nexus

      steps:
        - name: Set up Helm
          uses: azure/setup-helm@v4.3.0

        - name: Add Nexus repo
          run: |
            helm repo add chartmuseum ${{ env.NEXUS_HELM_REPO }} \
            --username ${{ env.NEXUS_HELM_REPO_USER }} \
            --password ${{ env.NEXUS_HELM_REPO_PASSWORD }}
            helm repo update

        - name: Configure and deploy
          run: |
            set -euo pipefail
            echo "${{ env.KUBE_CONFIG }}" > kubeconfig
            chmod 600 kubeconfig
            
            VERSION=$(helm show chart chartmuseum/sausage-store | yq '.version')
            
            helm upgrade --install sausage-store chartmuseum/sausage-store \
            --version "$VERSION" \
            --kubeconfig ./kubeconfig  \
            --namespace "${{ env.KUBE_NAMESPACE }}" \
            --set global.vault.name=vault \
            --set global.vault.host="${{ env.VAULT_HOST }}" \
            --set global.vault.vaultToken="${{ env.VAULT_TOKEN }}" \
            --set backend_report.image_tag=${{ github.sha }} \
            --set backend.image_tag=${{ github.sha }} \
            --set frontend.image_tag=${{ github.sha }}
            rm -f kubeconfig